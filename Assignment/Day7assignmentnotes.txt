SQL TCL Commands
TCL (Transaction Control Language) commands in SQL are used to manage transactions in a database.                                                                                           

1.COMMIT: Saves all the changes made in the current transaction.
syntax: COMMIT;


2.ROLLBACK: Undoes changes made in the current transaction if an error occurs.
Syntax: ROLLBACK;


3.SAVEPOINT: Sets a point within a transaction to which you can later roll back.
Syntax: SAVEPOINT savepoint_name;

4.SET TRANSACTION: Configures the properties of the current transaction.
Syntax: SET TRANSACTION [READ ONLY | READ WRITE];


Joins
Joins in SQL are used to combine records from two or more tables based on related columns. Here are the main types of joins:

1.INNER JOIN: Returns records that have matching values in both tables.                                                                       
SELECT columns FROM table1
INNER JOIN table2 ON table1.column = table2.column;
                                                                                                                                                                                     
2.LEFT JOIN (or LEFT OUTER JOIN): Returns all records from the left table and the matched records from the right table. If no match, NULL values are returned.
SELECT columns FROM table1                                                                                                                                      
LEFT JOIN table2 ON table1.column = table2.column;           

3.RIGHT JOIN (or RIGHT OUTER JOIN): Returns all records from the right table and the matched records from the left table. If no match, NULL values are returned. 
SELECT columns FROM table1                                                                                                                                                                                                                                                                                                                               
RIGHT JOIN table2 ON table1.column = table2.column;
                                                                                                                                                                                     
4.FULL JOIN (or FULL OUTER JOIN):  Returns all records when there is a match in either left or right table records. If there is no match, NULL values are returned.
SELECT columns FROM table1
FULL JOIN table2 ON table1.column = table2.column;

GROUP BY:  Groups rows that have the same values in specified columns into summary rows. Itâ€™s often used with aggregate functions.                                                                                                                                                              
SELECT column1, aggregate_function(column2)
FROM table_name
GROUP BY column1;
                                                                                                                                                                                                       
HAVING: Filters records after grouping, allowing conditions on aggregated data.                                                                    
SELECT column1, aggregate_function(column2)
FROM table_name
GROUP BY column1
HAVING condition;

Stored Procedure: A stored procedure is a precompiled collection of one or more SQL statements that can be executed as a single unit. It is stored in the database and can be called by applications or users.                                             
Advantages of Stored Procedures
*Performance: Stored procedures are precompiled, which can lead to improved performance compared to sending multiple individual SQL statements.
*Reusability: They can be reused multiple times in different applications without rewriting the SQL code.
*Security: They can restrict direct access to the tables and enforce security measures by allowing users to execute procedures without giving them direct access to the underlying data.
*Maintainability: Changes to business logic can be made in the stored procedure without affecting the application code.
*Transaction Management: Stored procedures can manage transactions, ensuring data integrit